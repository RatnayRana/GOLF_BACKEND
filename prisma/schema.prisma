// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
//users
model Customer {
  id            Int      @id @default(autoincrement())
  customer_name String   @db.VarChar(255)
  email         String   @db.VarChar(100) @unique
  password      String   @db.Char(60)
  phone_number  String   @db.VarChar(50)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  salt       String
  roles         Role[]   // One customer has many roles
}
//Roles
model Role {
  id         Int              @id @default(autoincrement())
  role_name  String           @db.VarChar(255)

  customerId Int              // FK to Customer
  customer   Customer         @relation(fields: [customerId], references: [id],onDelete: Cascade)

  permissions RolePermission[] // Many-to-many with Permission
}

model Permission {
  id               Int              @id @default(autoincrement())
  permission_name  String           @db.VarChar(255)

  roles            RolePermission[] // Many-to-many with Role
}

model RolePermission {
  id            Int         @id @default(autoincrement())

  roleId        Int
  permissionId  Int

  role          Role        @relation(fields: [roleId], references: [id],onDelete: Cascade)
  permission    Permission  @relation(fields: [permissionId], references: [id],onDelete: Cascade)
}
